# Lets Encrypt Go (Lego) in a container (ARMified)
#
# Example invocations:
#
# Getting a certificate using the DNS challenge
#
# docker run --rm \
# -v $HOME/.config/lego:/.lego \
# -e CLOUDFLARE_EMAIL="REPLACE_ME@example.com" \
# -e CLOUDFLARE_API_KEY="REPLACE_ME" \
# keyglitch/lego-arm \
# --email="REPLACE_ME@example.com" \
# --domains="REPLACE_ME.example.com" \
# --dns="cloudflare" \
# --dns-resolvers="8.8.8.8" \
# --dns-resolvers="8.8.4.4" \
# -a \
# run \
#
# Renewing a certificate
#
# docker run --rm \
# -v $HOME/.config/lego:/.lego \
# -e CLOUDFLARE_EMAIL="REPLACE_ME@example.com" \
# -e CLOUDFLARE_API_KEY="REPLACE_ME" \
# keyglitch/lego-arm \
# --email="REPLACE_ME@example.com" \
# --domains="REPLACE_ME.example.com" \
# --dns="cloudflare" \
# --dns-resolvers="8.8.8.8" \
# --dns-resolvers="8.8.4.4" \
# renew \
# --days=60

FROM golang:alpine

ENV GOPATH /go
ENV GOARCH arm
ENV CGO_ENABLED 0

RUN apk update && apk add --no-cache ca-certificates go git musl-dev && \
    rm -rf /var/cache/apk/* && \
    go get -u github.com/xenolf/lego && \
    cd /go/src/github.com/xenolf/lego && \
    go build -o /usr/bin/lego . && \
    apk del go git && \
    rm -rf /var/cache/apk/* && \
    rm -rf /go

FROM alpine:edge
WORKDIR /usr/bin
COPY --from=0 /usr/bin/lego .
ENTRYPOINT [ "/usr/bin/lego" ]